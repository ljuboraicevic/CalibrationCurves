DROP TABLE IF EXISTS "calibrations";
CREATE TABLE "calibrations" ("calibration_id_pk" INTEGER PRIMARY KEY  AUTOINCREMENT  NOT NULL , "name" TEXT);
INSERT INTO "calibrations" VALUES(1,'test1');
DROP TABLE IF EXISTS "learned_functions";
CREATE TABLE "learned_functions" ("lf_id_pk" INTEGER PRIMARY KEY  AUTOINCREMENT  NOT NULL , "theta0" DOUBLE, "theta1" DOUBLE, "theta2" DOUBLE, "theta3" DOUBLE, "calibration_id_fk" INTEGER, "mean1" DOUBLE, "mean2" DOUBLE, "mean3" DOUBLE, "range1" DOUBLE, "range2" DOUBLE, "range3" DOUBLE);
INSERT INTO "learned_functions" VALUES(36,0.7250000000000002,2.7233402536277356,-1.9673997904756992,0.29937638875369643,1,0.30000000000000004,0.14,0.07200000000000001,0.6,0.6,0.6);
DROP TABLE IF EXISTS "learned_points";
CREATE TABLE "learned_points" ("lp_id_pk" INTEGER PRIMARY KEY  AUTOINCREMENT  NOT NULL , "x" DOUBLE, "y" DOUBLE, "calibration_id_fk" INTEGER);
DROP TABLE IF EXISTS "measurements";
CREATE TABLE "measurements" ("measurements_id_pk" INTEGER PRIMARY KEY  AUTOINCREMENT  NOT NULL , "time" DOUBLE, "fibrinogen" DOUBLE, "calibration_id_fk" INTEGER);
INSERT INTO "measurements" VALUES(17,0,0,1);
INSERT INTO "measurements" VALUES(18,0.2,0.8,1);
INSERT INTO "measurements" VALUES(19,0.4,1,1);
INSERT INTO "measurements" VALUES(20,0.6,1.1,1);
INSERT INTO "measurements" VALUES(36,1,1,1);
INSERT INTO "measurements" VALUES(37,2,2,1);
CREATE TRIGGER "after_calibration_delete" AFTER DELETE ON "calibrations" FOR EACH ROW  BEGIN DELETE FROM measurements WHERE measurements.calibration_id_fk = old.calibration_id_pk;
DELETE FROM learned_functions WHERE learned_functions.calibration_id_fk = old.calibration_id_pk;
DELETE FROM learned_points WHERE learned_points.calibration_id_fk = old.calibration_id_pk; END;
CREATE TRIGGER "after_measurement_delete" AFTER DELETE ON "measurements" FOR EACH ROW  BEGIN DELETE FROM learned_points WHERE learned_points.calibration_id_fk = old.calibration_id_fk; END;
CREATE TRIGGER "after_measurements_insert" AFTER INSERT ON "measurements" FOR EACH ROW  BEGIN DELETE FROM learned_points WHERE learned_points.calibration_id_fk = new.calibration_id_fk; END;
